<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="32851" started-at="2018-03-17T18:35:23Z" finished-at="2018-03-17T18:35:56Z">
    <groups>
      <group name="functional">
        <method signature="TestCaseOne.funtionTwo(java.lang.String, java.lang.String)[pri:2, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionTwo" class="TestNGPackage.TestCaseOne"/>
        <method signature="TestCaseOne.funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionThree" class="TestNGPackage.TestCaseOne"/>
      </group> <!-- functional -->
      <group name="Regression">
        <method signature="TestCaseOne.funtionTwo(java.lang.String, java.lang.String)[pri:2, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionTwo" class="TestNGPackage.TestCaseOne"/>
        <method signature="TestCaseOne.funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionThree" class="TestNGPackage.TestCaseOne"/>
      </group> <!-- Regression -->
      <group name="sanity">
        <method signature="TestCaseOne.funtionTwo(java.lang.String, java.lang.String)[pri:2, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionTwo" class="TestNGPackage.TestCaseOne"/>
        <method signature="TestCaseOne.funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionThree" class="TestNGPackage.TestCaseOne"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Test" duration-ms="32851" started-at="2018-03-17T18:35:23Z" finished-at="2018-03-17T18:35:56Z">
      <class name="TestNGPackage.TestCaseOne">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPackage.TestCaseOne@cb5822]" name="beforeMethod" is-config="true" duration-ms="23736" started-at="2018-03-17T14:35:23Z" finished-at="2018-03-17T14:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="funtionTwo(java.lang.String, java.lang.String)[pri:2, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionTwo" duration-ms="5047" started-at="2018-03-17T14:35:47Z" description="Invalid Login check" finished-at="2018-03-17T14:35:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[asfareg@gmail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdva]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method org.testng.internal.TestNGMethod.funtionTwo() didn't finish within the time-out 5000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.funtionTwo() didn't finish within the time-out 5000
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(Unknown Source)
	at java.net.SocketInputStream.read(Unknown Source)
	at java.net.SocketInputStream.read(Unknown Source)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at TestNGPackage.TestCaseOne.funtionTwo(TestCaseOne.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- funtionTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestNGPackage.TestCaseOne@cb5822]" name="afterMethod" is-config="true" duration-ms="3944" started-at="2018-03-17T14:35:52Z" finished-at="2018-03-17T14:35:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822]" name="funtionThree" duration-ms="0" started-at="2018-03-17T14:35:56Z" description="Forgot Account" depends-on-methods="TestNGPackage.TestCaseOne.funtionTwo" finished-at="2018-03-17T14:35:56Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCaseOne.funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCaseOne.funtionThree()[pri:1, instance:TestNGPackage.TestCaseOne@cb5822] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- funtionThree -->
      </class> <!-- TestNGPackage.TestCaseOne -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
